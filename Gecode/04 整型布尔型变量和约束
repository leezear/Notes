---
title: 04 整型布尔型变量和约束
tags: 新建,模板,小书匠
grammar_cjkRuby: true
---
## Overview
| | |
| --- | ------------------------------ |
| 4.1 | 详述如何用整型和布尔型变量建模 |
| 4.2 | 讨论变量数组和系数数组         |
| 4.3 | 说明Gecode约束是如何传输的     |
| 4.4 |  综述了Gecode中整型和布尔型可用的约束 |

引用头文件
```cpp
#include <gecode/int.hh>
```
使用命名空间
```cpp
using namespace Gecode
```
---------------
[TOC]

## 4.1 整型和布尔型变量

 1. 整型变量：```IntVar```	
 2. 布尔变量：```BoolVar```

两种变量没有特别联系，需要使用特定约束，进行相互转换。

### 4.1.1 创建整型变量
```cpp?linenums
//定义一个变量x，dom(x) = {-4, ..., 20}
IntVar x(home, -4, 20);
//也可以用IntSet定义变量域
IntVar x(home, IntSet(-4, 20));
```
变量域为空会抛出异常```Int::VariableEmptyDomain```。

#### Tip 4.2[初始化变量]
```cpp?linenums
IntVar x;
x = IntVar(home, -4, 20);
//默认的拷贝函数不会创建新的变量，x与y指向相同的实现
IntVar x(home, 1, 4);
IntVar y(x);
//与下等价
IntVar x(home, 1, 4);
IntVar y;
y=x;
```

### 4.1.2 整型值的极限
整型变量的取值集合是```int```类型取值集合的子集。
```INT_MIN``` < ```-Int::Limits::min = Int::Limits::max``` < ```INT_MAX```
超出以上范围会抛出 ```Int::OutOfLimits``` 的异常。 

### 4.1.3 变量域不能为空
会抛出```Int::VariableEmptyDomain```异常。

### 4.1.4 创建布尔变量 
布尔变量的值域为0和1，任何对其初始化非0和1的数会抛出异常 ```Int::NotZeroOne```异常。

## 4.4 约束总览
本节提供了整型和布尔变量的可用的约束及它们的约束传输函数

### 4.4.1 Domain constraints [值域约束]
### 4.4.2 Membership constraints [隶属度约束]
### 4.4.3 Simple relation constraints over integer variables
### 4.4.4 Simple relation constraints over Boolen variables








欢迎使用 **{小书匠}(xiaoshujiang)编辑器**，您可以通过==设置==里的修改模板来改变新建文章的内容。